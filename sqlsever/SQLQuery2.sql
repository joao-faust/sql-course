CREATE DATABASE banco01
GO

USE banco01
GO

CREATE TABLE teste(
	nome VARCHAR(30)
)
GO

/*
 ORGANIZAR FISICAMENTE E LOGICAMENTE UM BANCO DE DADOS 

1 - CRIAR O BANCO COM ARQUIVOS PARA OS SETORES DE MKT E VENDAS;
2 - CRIAR UM ARQUIVO GERAL;
3 - DEIXAR O MDF APENAS COM O DICIONÁRIO DE DADOS;
4 - CRIAR OS GRUPOS DE ARQUIVOS (PRIMARY - MDF).
*/

CREATE TABLE TB_EMPRESA(
	ID INT,
	NOME VARCHAR(50)
)
GO

/* CONECTANDO A UM BANCO DE DADOS */

USE EMPRESA
GO

/* CRIANDO TABELAS */

CREATE TABLE ALUNO(
	IDALUNO INT PRIMARY KEY IDENTITY(1,1),
	NOME VARCHAR(50) NOT NULL,
	SEXO CHAR(1) NOT NULL,
	NASCIMENTE DATE NOT NULL,
	EMAIL VARCHAR(50) UNIQUE NOT NULL
)
GO

/* CONSTRAINTS */

ALTER TABLE ALUNO
ADD CONSTRAINT CK_SEXO CHECK (SEXO IN('M','F'))
GO

/* 1 X 1 */

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY IDENTITY(100,10),
	BAIRRRO VARCHAR(30) NOT NULL,
	UF CHAR(2) NOT NULL
	CHECK(UF IN('RJ','SP','MG')),
	ID_ALUNO INT UNIQUE NOT NULL
)
GO

/* 1 X N */
CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY IDENTITY(1,1),
	TIPO CHAR(3) NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_ALUNO INT NOT NULL,
	CHECK (TIPO IN ('RES','COM','CEL'))
)
GO

/* CRIANDO A FK */

ALTER TABLE ENDERECO ADD CONSTRAINT FK_ENDERECO_ALUNO
FOREIGN KEY(ID_ALUNO) REFERENCES ALUNO(IDALUNO)
GO

/* COMANDOS DE DESCRIÇÃO */

/* PROCEDURES - JÁ CRIADAS E ARMAZENADAS NO SISTEMA */

SP_COLUMNS ALUNO
GO

SP_HELP ALUNO
GO

/* INSERINDO DADOS */

INSERT INTO ALUNO VALUES('ANDRE','M','1981/12/09','ANDRE@EMAIL.COM')
INSERT INTO ALUNO VALUES('ANA','F','1989/11/17','ANA@EMAIL.COM')
INSERT INTO ALUNO VALUES('RUI','M','2004/03/11','RUI@EMAIL.COM')
INSERT INTO ALUNO VALUES('JOAO','M','1976/07/23','JOAO@EMAIL.COM')
GO

SELECT * FROM ALUNO
GO

/* ENDERECO */
INSERT INTO ENDERECO VALUES('FLAMENGO','RJ',9)
INSERT INTO ENDERECO VALUES('MORUMBI','SP',10)
INSERT INTO ENDERECO VALUES('CENTRO','SP',11)
INSERT INTO ENDERECO VALUES('CENTRO','MG',12)
GO

SELECT * FROM ENDERECO 
ORDER BY ID_ALUNO
GO

/* TELEFONE */

INSERT INTO TELEFONE VALUES('CEL','7776632',9)
INSERT INTO TELEFONE VALUES('RES','8823232',9)
INSERT INTO TELEFONE VALUES('COM','2233228',10)
INSERT INTO TELEFONE VALUES('CEL','8982234',10)
GO

SELECT * FROM TELEFONE
GO

/* PEGAR DATA ATUAL DO SISTEMA */

SELECT GETDATE()
GO

/* CLAUSULA AMBIGUA */
SELECT 
	A.NOME, 
	T.TIPO, 
	T.NUMERO, 
	E.BAIRRRO, E.UF
FROM ALUNO A
INNER JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO
INNER JOIN ENDERECO E
ON A.IDALUNO = E.ID_ALUNO
GO

SELECT 
	A.NOME AS "ALUNO", 
	ISNULL(T.TIPO, '---') AS "TIPO", 
	ISNULL(T.NUMERO, '---') AS "TELEFONE", 
	E.BAIRRRO AS "BAIRRO", 
	E.UF AS "ESTADO"
FROM ALUNO A
LEFT JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO
INNER JOIN ENDERECO E
ON A.IDALUNO = E.ID_ALUNO
GO

/* DATAS */

SELECT * FROM ALUNO 
GO

SELECT 
	NOME AS "ALUNO", 
	NASCIMENTE AS "NASCIMENTO"
FROM ALUNO
GO

/* DATADIFF - CALCULA A DIREFERENÇA ENTRE DUAS DATAS - INT */
SELECT 
	NOME AS "ALUNO",
	GETDATE() AS "MOMENTO"
FROM ALUNO

SELECT 
	NOME AS "ALUNO",
	DATEDIFF(DAY, NASCIMENTE, GETDATE()) AS "DIFERENCA"
FROM ALUNO
GO

SELECT 
	NOME AS "ALUNO",
	(DATEDIFF(DAY, NASCIMENTE, GETDATE()) / 365) AS "DIFERENCA"
FROM ALUNO
GO

SELECT 
	NOME AS "ALUNO",
	(DATEDIFF(MONTH, NASCIMENTE, GETDATE()) / 12) AS "DIFERENCA"
FROM ALUNO
GO

SELECT 
	NOME AS "ALUNO",
	DATEDIFF(YEAR, NASCIMENTE, GETDATE()) AS "DIFERENCA"
FROM ALUNO
GO

/* DATENAME - TRAZ O NOME DA PARTE DA DATA EM QUESTAO - STRING */

SELECT 
	NOME,
	DATENAME(MONTH, NASCIMENTE)
FROM ALUNO 
GO   

SELECT 
	NOME,
	DATENAME(DAY, NASCIMENTE)
FROM ALUNO 
GO   

SELECT 
	NOME,
	DATENAME(YEAR, NASCIMENTE)
FROM ALUNO 
GO

SELECT 
	NOME,
	DATENAME(WEEKDAY, NASCIMENTE)
FROM ALUNO 
GO

/* DATEPART - POREM O RETORNO É EM INTEIRO */
SELECT 
	NOME,
	DATEPART(MONTH, NASCIMENTE),
	DATENAME(MONTH, NASCIMENTE)
FROM ALUNO
GO

/* DATEADD - RETORNA UMA DATA SOMANDO OUTRA DATA */
SELECT DATEADD(DAY, 365, GETDATE())
GO

SELECT DATEADD(YEAR, 10, GETDATE())
GO

/* CONVERSAO DE DADOS */
SELECT 1 + '1' AS "SOMA"
GO

SELECT '1' + '1' AS "CONCAT"
GO

SELECT 'CURSO DE BANCO DE DADOS' + ' 2017' AS "CONCAT"
GO

/* FUNCOES DE CONVERSAO DE DADOS */
SELECT CAST('1' AS INT) + CAST('1' AS INT) 
GO

/* CONVERSAO E CONCATENACAO */

SELECT 
	NOME,
	NASCIMENTE
FROM ALUNO
GO

SELECT 
	NOME,
	CAST(DAY(NASCIMENTE) AS VARCHAR) + '/' +
	CAST(MONTH(NASCIMENTE) AS VARCHAR) + '/' +
	CAST(YEAR(NASCIMENTE) AS VARCHAR) AS "NASCIMENTO"
FROM ALUNO
GO

/* CHAR INDEX - RETORNA UM INTEIRO BASEADO NUMA COLUNA 
CONTAGEM DEFAULT - 1
*/

SELECT 
	NOME,
	CHARINDEX('A', NOME) AS "INDICE"
FROM ALUNO
GO	

SELECT 
	NOME,
	CHARINDEX('A', NOME, 2) AS "INDICE"
FROM ALUNO
GO	

/* BULK INSERT - IMPORTAÇÃO DE ARQUIVOS */

CREATE TABLE LANCAMENTO_CONTATO(
	CONTA INT,
	VALOR INT,
	DEB_CRED CHAR(1)
)
GO

SELECT * FROM LANCAMENTO_CONTATO
GO

/* \t - TAB */

BULK INSERT LANCAMENTO_CONTATO
FROM 'C:\arquivos\CONTAS.txt'
WITH
(
	FIRSTROW = 2,
	DATAFILETYPE = 'char',
	FIELDTERMINATOR = '\t',
	ROWTERMINATOR = '\n'
)
GO

SELECT * FROM LANCAMENTO_CONTATO
GO

/* 
DESAFIO DO SALDO
QUERY QUE TRAGA O NÚMERO DA CONTA 
SALDO - DEVEDOR OU CREDOR
 */

SELECT 
	CONTA,
	VALOR,
	CHARINDEX('D', DEB_CRED) AS DEBITO,
	CHARINDEX('C', DEB_CRED) AS CREDITO,
	CHARINDEX('C', DEB_CRED) * 2 - 1 AS MULTIPLICADOR
FROM LANCAMENTO_CONTATO
GO

SELECT 
	CONTA,
	SUM(VALOR * (CHARINDEX('C', DEB_CRED) * 2 - 1)) AS SALDO
FROM LANCAMENTO_CONTATO
GROUP BY CONTA 
ORDER BY 1
GO
